<?xml version="1.0" encoding="UTF-8"?>
<web-app xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
		 xmlns="http://xmlns.jcp.org/xml/ns/javaee" 
		 xsi:schemaLocation="http://xmlns.jcp.org/xml/ns/javaee 
		 	http://xmlns.jcp.org/xml/ns/javaee/web-app_3_1.xsd" 
		 id="WebApp_ID" version="3.1">
  <display-name>ssm-web</display-name>
  
  <!-- 配置文件所在位置 -->
  <!--全局范围内环境参数初始化-->  
    <context-param>
        <param-name>contextConfigLocation</param-name>
        <param-value>classpath:spring-mybatis.xml</param-value>
    </context-param>
  
  <!-- 解决工程编码过滤器 -->
  <filter>
     <filter-name>characterEncodingFilter</filter-name>
     <filter-class>org.springframework.web.filter.CharacterEncodingFilter</filter-class>
     <async-supported>true</async-supported>     <!--设置是否启用异步支持-->  
     <init-param>
     <!--用来定义参数,若在Servlet可以使用下列方法来获得:
     		String param_name=getServletContext().getInitParamter("param-name里面的值");--> 
        <param-name>encoding</param-name>
        <param-value>UTF-8</param-value>
     </init-param>
   </filter>
   <filter-mapping>
     <filter-name>characterEncodingFilter</filter-name>
     <url-pattern>/*</url-pattern>
   </filter-mapping>
    
    <!-- Spring配置（监听器） -->
    <listener>
        <listener-class>org.springframework.web.context.ContextLoaderListener</listener-class>
    </listener>
    <!-- 防止Spring内存溢出监听器  -->  
    <listener>  
        <listener-class>org.springframework.web.util.IntrospectorCleanupListener</listener-class>  
    </listener>  
    
    <!-- SpringMVC配置，配置了前端控制器 -->
    <servlet>
        <servlet-name>springDispatcherServlet</servlet-name>
        <servlet-class>org.springframework.web.servlet.DispatcherServlet</servlet-class>
        <init-param>
            <param-name>contextConfigLocation</param-name>
            <param-value>classpath:spring-mvc.xml</param-value>
        </init-param>
        <!--当值为正数或零时：Servlet容器先加载数值小的servlet，再依次加载其他数值大的servlet.--> 
        <load-on-startup>1</load-on-startup>
        <!--设置是否启用异步支持-->  
        <async-supported>true</async-supported>
    </servlet>
    <servlet-mapping>
        <servlet-name>springDispatcherServlet</servlet-name>
        <url-pattern>/</url-pattern>
    </servlet-mapping>
    
    <!--会话超时配置（单位为分钟）如果某个会话在一定时间未被访问，则服务器可以扔掉以节约内存-->  
    <session-config>
        <session-timeout>120</session-timeout>  
    </session-config>  
    
    <!-- MIME类型配置 -->
    <mime-mapping><!--设定某种扩展名的文件用一种应用程序来打开的方式类型，当该扩展名文件被访问的时候，浏览器会自动使用指定应用程序来打开-->  
        <extension>*.ppt</extension>            <!--扩展名名称-->  
        <mime-type>application/mspowerpoint</mime-type>         <!--MIME格式-->  
    </mime-mapping>  
    
    <welcome-file-list>
      <welcome-file>index.html</welcome-file>
      <welcome-file>index.jsp</welcome-file>
    </welcome-file-list>
    
    <!-- 配置错误页面 -->
    <!-- <error-page>  将错误代码(Error Code)或异常(Exception)的种类对应到web应用资源路径.  
        <error-code>404</error-code>        HTTP Error code,例如: 404、403  
        <location>error.html</location>         用来设置发生错误或异常时要显示的页面  
    </error-page>  
    <error-page>  
        <exception-type>java.lang.Exception</exception-type>设置可能会发生的java异常类型,例如:java.lang.Exception  
        <location>ExceptionError.html</location>            用来设置发生错误或异常时要显示的页面  
    </error-page> -->  
</web-app>
